
type DRGDepth struct{}  // TODO: finish
type DRGFraction struct{}  // TODO: finish
type DRGSeed struct{}  // TODO: finish
type DRGNodeCount struct{}  // TODO: finish
type DRGNodeSize struct{}  // TODO: finish
type DRGDegree struct{}  // TODO: finish
type StackedDRGLayers struct{}  // TODO: finish
type StackedDRGNodeSize struct{}  // TODO: finish

type ExpanderGraphDegree struct{}  // TODO: finish
type ExpanderGraphSeed struct{}  // TODO: finish
type ChungExpanderAlpha struct{}  // TODO: finish
type ChungExpanderBeta struct{}  // TODO: finish
type ChungExpanderPermutationFeistelSeed struct{}  // TODO: finish
type ChungExpanderPermutationFeistelRound struct{}  // TODO: finish
type ChungExpanderPermutationFeistelHashFunction struct{}  // TODO: finish



type SealAlgorithmArtifacts struct { // ZigZagPoRep

  AlgorithmWideSetupArtifacts struct {
    // trusted setup output parameters go here
    // updates to public parameters go here

  }

  SealSetupArtifacts struct {
    // per-sector setup artifacts go here
  }

  // ProveArtifacts or
  ChallengeArtifacts struct {
    // inputs into prove() go here
  }

  VerifyArtifacts struct {
    // inputs into verify() go here
  }
}

type PoRep union {
  ZigZagPoRep
}

type PoSpace union {
  PoRep
}

type ZigZagPoRep StackedDRG

type SDRPoSpace StackedDRG

type StackedDRGAlgorithm struct{}

type StackedDRG struct {
  Layers            StackedDRGLayers
  NodeSize          StackedDRGNodeSize
  Algorithm         struct {

  }
  DRGCfg            DRGCfg
  ExpanderGraphCfg  ExpanderGraphCfg
  // invariant: DRGCfg.NodeSize == ExpanderGraphCfg.NodeSize
}

type DRGCfg struct {
  Algorithm struct {
    Depth    DRGDepth    // D
    Fraction DRGFraction // E

    ParentsAlgorithm union {
      DRSample struct {}
    }
  }
  Degree DRGDegree
  Seed   DRGSeed
  Nodes  DRGNodeCount
}

type ExpanderGraphCfg struct {
  Algorithm union {
    ChungExpanderAlgorithm struct {
      Alpha ChungExpanderAlpha
      Beta  ChungExpanderBeta
      PermutationAlgorithm union {
        Feistel struct {
          Seed         ChungExpanderPermutationFeistelSeed
          Round        ChungExpanderPermutationFeistelRound
          HashFunction ChungExpanderPermutationFeistelHashFunction
        }
      }
    }
  }

  Degree   ExpanderGraphDegree
  Seed     ExpanderGraphSeed
  NodeSize DRGNodeSize
}
