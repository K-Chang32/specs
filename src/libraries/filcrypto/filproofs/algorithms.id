import file "github.com/filecoin-project/specs/systems/filecoin_files/file"
import sector "github.com/filecoin-project/specs/systems/filecoin_mining/sector"

type StackedDRGLayers UInt

type StackedDRGNodeSize UInt

type StackedDRGChallenges UInt

type DRGDepth struct {}
type DRGFraction struct {}
type DRGDegree struct {}
type DRGSeed struct {}
type DRGNodeCount struct {}
type ChungExpanderPermutationFeistelKeys [UInt]
type ChungExpanderPermutationFeistelRounds UInt
type ChungExpanderPermutationFeistelHashFunction enum {
    Blake2S
}
type ChungExpanderAlpha struct {}
type ChungExpanderBeta struct {}
type ExpanderGraphDegree struct {}
type ExpanderGraphSeed struct {}
type DRGNodeSize struct {}

type SealAlgorithmArtifacts struct {
    AlgorithmWideSetupArtifacts struct {
        // trusted setup output parameters go here
        // updates to public parameters go here
    }

    SealSetupArtifacts

    // ProveArtifacts or
    ChallengeArtifacts struct {
        // inputs into prove() go here
    }

    VerifyArtifacts struct {
        // inputs into verify() go here
    }
}

// per-sector setup artifacts go here   
type SealSetupArtifacts struct {
    CommR              sector.SealedSectorCID
    CommC              sector.Commitment
    CommRLast          sector.Commitment
    CommCTreePath      file.Path
    CommRLastTreePath  file.Path
    KeyLayers          [Bytes]
    Replica            Bytes
}

type PoRep union {
    ZigZagPoRep
}

type PoSpace union {
    PoRep
}

type ZigZagPoRep StackedDRG

type SDRPoSpace StackedDRG

type EllipticCurve struct {
    FieldModulus &BigInt
}

//type StackedDRG_Algorithm struct {}

type StackedDRG struct {
    Layers            StackedDRGLayers
    NodeSize          StackedDRGNodeSize
    Challenges        StackedDRGChallenges
    Algorithm         struct {}
    DRGCfg
    ExpanderGraphCfg
    // invariant: DRGCfg.NodeSize == ExpanderGraphCfg.NodeSize
    Curve             EllipticCurve
}

type DRGCfg struct {
    Algorithm struct {
        Depth     DRGDepth  // D
        Fraction  DRGFraction  // E

        ParentsAlgorithm enum {
            DRSample
        }

        RNGAlgorithm enum {
            ChaCha20
        }
    }
    Degree DRGDegree
    Seed DRGSeed
    Nodes DRGNodeCount
}

type DRG struct {
    Config DRGCfg
    Parents(Bytes, UInt) [UInt]
}

type ExpanderGraphCfg struct {
    Algorithm union {
        ChungExpanderAlgorithm struct {
            Alpha  ChungExpanderAlpha
            Beta   ChungExpanderBeta
            PermutationAlgorithm union {
                Feistel struct {
                    Keys          ChungExpanderPermutationFeistelKeys
                    Rounds        ChungExpanderPermutationFeistelRounds
                    HashFunction  ChungExpanderPermutationFeistelHashFunction
                }
            }
        }
    }

    Degree    ExpanderGraphDegree
    Seed      ExpanderGraphSeed
    NodeSize  DRGNodeSize
}

type ExpanderGraph struct {
    Config ExpanderGraphCfg
    Parents(Bytes, UInt) [UInt]
}
