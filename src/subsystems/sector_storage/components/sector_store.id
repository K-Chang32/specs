type Path String // Opaque identifier allowing read/write access to storage.

type StagedSector struct {
       SectorConfig SectorConfig,
       BytesUsed  UInt, // Size of data in sector after preprocessing and padding.
       Path       Path,

       CapacityRemaining() UInt, // How many more bytes of raw data can this sector hold, at most?
}

type SectorStore struct {
   SectorMetadata     { Commitment: SectorMetadata }
   
   WritePiece(piece Piece) string, // Temp storage for pieces not yet sealed.
   PlacePiece(from Path, to StagedSector, position UInt) struct{}

   AllocateSealedSector(SectorSize UInt) Path,
   AllocateStagedSector(SectorSize UInt) Path,


   RegisterMetadata(m SectorMetadata) struct{},
   GetMetadata(c Commitment) SectorMetadata,
   UpdateMetadata(m SectorMetadata) struct{},    // This may not actually be needed.
   RemoveMetadata(commR Commitment) struct{},
}
