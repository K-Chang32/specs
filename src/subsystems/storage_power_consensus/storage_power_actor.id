type StoragePowerActor struct {

	// call by StorageMiningSubsytem on miner creation
	RegisterMiner(ownerAddr Address, workerPubKey PubKey) struct{}

	// call by StorageMinerActor on successful seal
	// TODO: workerKey of type StorageMiner.WorkerPubKey
	IncrementPower(minerAddress Address) struct {}
	UpdatePower(address Address, newPower minerStorage) struct {}
	SuspendMiner(address Address) struct {}

	// UpdateStoragePowerSubsystem(Tipset, StateTree)

	// VerifyElectionProof(Address, ElectionProof)	bool
	// TotalStorage()								UVarint

	// // What does graceful removal look like?
	// NotifyConsensusFault(Address, [Block])
	// NotifyStorageFault(Address)
	// TryPublishBlock(StateTree)					Block

	// RegisterStorageMiner(SealProof)				Address
	// TryUpdateStorage(Address, newPower)			error

}