type StorageMiningSubsystem struct {

    storageMinerActors [&StorageMinerActor]
    sectorIndexer SectorIndexerSubsystem
    storagePowerConsensus StoragePowerConsensusSubsystem

    CurrentChain() Chain
    CurrentEpoch() Epoch
    CurrentTipset() Tipset
    
    StartMining() struct {}
    StopMining() struct {}

    InitStorageMiningSubsystem() struct{}

    // call by StorageMiningSubsystem itself to create miner
    CreateMiner(ownerPubKey PubKey, workerPubKey PubKey, pledgeAmt TokenAmount) struct {}

    // call by StorageProvider at the start of a deal
    // and trigger AddPieceToSector on SectorIndexer
    HandleStorageDeal(deal StorageDeal) struct{}

    // call by StorageMinerActor when error in sealing
    CommitSectorError() struct{}

    // call by BlockChain when a new block is produced
    OnNewTipset(chain Chain, epoch Epoch) struct{}

    // call by clock during BlockProduction
    // TODO: define clock better
    OnNewRound() ElectionArtifacts

    // call by StorageMiningSubsystem itself in BlockProduction
    DrawElectionProof(tk Randomness, workerKey PrivateKey) ElectionProof

    // call by StorageMiningSubsystem itself in BlockProduction
    // use T1 randomness when producing on a tipset
    // use T0 randomness when producing on a null block
    GenerateNextTicket(seed Randomness, workerKey PrivateKey) Ticket
}
