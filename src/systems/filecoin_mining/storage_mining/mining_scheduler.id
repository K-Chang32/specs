import poster "github.com/filecoin-project/specs/systems/filecoin_mining/storage_proving/poster"
import sector "github.com/filecoin-project/specs/systems/filecoin_mining/sector"
import actor "github.com/filecoin-project/specs/systems/filecoin_blockchain/vm/actor"
import mining "github.com/filecoin-project/specs/systems/filecoin_mining"
// import storage_indexer "github.com/filecoin-project/specs/systems/filecoin_mining/storage_indexer"

type Sector struct {}
type SectorSet [Sector]
type SealedSectorSet [Sector]
type ReplicaID CID

type MiningScheduler struct {
    getStagedSectors()                              SectorSet
    getSealedSectors()                              SealedSectorSet
    getFaultySectors()                              SectorSet
    getRepairedSectors()                            SectorSet
    // same as completedSectors/doneSectors
    getExpiredSectors()                             SectorSet

    ProducePost(sectors SectorSet)                  poster.PoStSubmission
    VerifyPost(sectors SectorSet)                   poster.PoStSubmission

    ReportFaults(
        actor &StorageMinerActor
    ) bool

    RemoveSectors(remove SectorSet)                 bool

    DePledge(
        amount actor.TokenAmount
    ) bool

    // receives from sector storage subsystem
    SealedSector(
        sealedSector mining.SealedSector
    ) bool

    AddSector(
        pledge    actor.TokenAmount
        sectorID  &sector.SectorID
        comm      &mining.SealCommitment
        proof     sector.SealProof
    ) sector.SectorID

    // generateReplicaID(CommD Commitment, block Block)
}
