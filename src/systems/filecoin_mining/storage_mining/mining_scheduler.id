import poster "github.com/filecoin-project/specs/systems/filecoin_mining/storage_proving/poster"
import sector "github.com/filecoin-project/specs/systems/filecoin_mining/sector"
import actor "github.com/filecoin-project/specs/systems/filecoin_vm/actor"
import mining "github.com/filecoin-project/specs/systems/filecoin_mining"
// import storage_indexer "github.com/filecoin-project/specs/systems/filecoin_mining/storage_indexer"

type ReplicaID CID

type MiningScheduler struct {
    getStagedSectors()    sector.SectorSet
    getSealedSectors()    sector.SealedSectorSet
    getFaultySectors()    sector.SectorSet
    getRepairedSectors()  sector.SectorSet
    // same as completedSectors/doneSectors
    getExpiredSectors()   sector.SectorSet

    ProducePost(sectors sector.SectorSet) poster.PoStSubmission
    VerifyPost(sectors sector.SectorSet) poster.PoStSubmission

    ReportFaults(
        actor &StorageMinerActorCode
    ) bool

    RemoveSectors(remove sector.SectorSet) bool

    DePledge(
        amount actor.TokenAmount
    ) bool

    // receives from sector storage subsystem
    SealedSector(
        sealedSector mining.SealedSector
    ) bool

    AddSector(
        pledge    actor.TokenAmount
        sectorID  &sector.SectorID
        comm      &sector.OnChainSealVerifyInfo
    ) sector.SectorID

    // generateReplicaID(CommD Commitment, block Block)
}
