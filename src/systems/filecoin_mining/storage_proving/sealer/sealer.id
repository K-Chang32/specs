import sector "github.com/filecoin-project/specs/systems/filecoin_mining/sector"
import file "github.com/filecoin-project/specs/systems/filecoin_files/file"
import deal "github.com/filecoin-project/specs/systems/filecoin_markets/deal"

type Seal1Inputs struct {
    SectorID      sector.SectorID
    SealCfg       sector.SealCfg
    UnsealedPath  file.Path
    SealedPath    file.Path
    DealIDs       [deal.DealID]
}

type Seal2Inputs struct {
    SectorID      sector.SectorID
    SealCfg       sector.SealCfg
    RandomSeed    sector.SealRandomSeed
    SealedPath    file.Path
    Seal1Outputs
}

type Seal1Outputs struct {
    SealInfo  sector.SealVerifyInfo
    ProofAux  sector.ProofAux
}

type Seal2Outputs struct {
    SealInfo  sector.SealVerifyInfo
    ProofAux  sector.ProofAux
}

type SectorSealer struct {
    Seal1Sector() union {so Seal1Outputs, err error}
    Seal2Sector(si Seal2Inputs) union {so Seal2Outputs, err error}
    VerifySeal(sv sector.SealVerifyInfo) union {ok bool, err error}

    ComputeDataCommitment(unsealedPath file.Path) union {commD sector.UnsealedSectorCID, err error}
    ComputeReplicaID(
        sid    sector.SectorID
        commD  sector.UnsealedSectorCID
        seed   sector.SealRandomSeed
    ) union {replicaID Bytes, err error}

    MaxUnsealedBytesPerSector(SectorSize UInt) UInt
}
