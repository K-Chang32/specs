import sector "github.com/filecoin-project/specs/systems/filecoin_mining/sector"
import file "github.com/filecoin-project/specs/systems/filecoin_files/file"
import addr "github.com/filecoin-project/specs/systems/filecoin_vm/actor/address"

type SealInputs struct {
    SectorID      sector.SectorID
    SealCfg       sector.SealCfg
    MinerID       addr.Address
    RandomSeed    sector.SealRandomSeed
    UnsealedPath  file.Path
    SealedPath    file.Path
}

type SealOutputs struct {
    SealInfo  sector.SealVerifyInfo
    ProofAux  sector.ProofAux
}

type SectorSealer struct {
    SealSector(si SealInputs) union {so SealOutputs, err error}
    VerifySeal(sv sector.SealVerifyInfo) union {ok bool, err error}

    //  GeneratePieceInclusionProof(
    //    Tree          MerkleTree, //MerkleTree<Rephash>,
    //    PieceStart    UInt,
    //    PieceLength   UInt,
    //  ) union { error, PieceInclusionProofs }
    //
    //  VerifyPieceInclusionProof() struct {}

    MaxUnsealedBytesPerSector(SectorSize UInt) UInt
}
