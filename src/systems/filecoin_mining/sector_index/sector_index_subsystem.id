import blockchain "github.com/filecoin-project/specs/systems/filecoin_blockchain"
import sector "github.com/filecoin-project/specs/systems/filecoin_mining/sector"
// import storage_proofs "github.com/filecoin-project/specs/systems/filecoin_mining/storage_proofs"
import mkt "github.com/filecoin-project/specs/systems/filecoin_markets"

type PieceInclusionProof struct {} // TODO

type AddDealToSectorResponse struct {
	sectorID sector.SectorID
	pip PieceInclusionProof
}

// TODO import this from StorageMarket


type SectorIndexerSubsystem struct {

	ProverID       ProverID
	SectorStore    SectorStore
	SectorBuilder  [SectorBuilder]
	StorageProofs  StorageProofs

	// call by StorageMiningSubsystem when adding a deal to sector
	// should return PieceInclusionProof
	AddDealToSector(deal mkt.StorageDeal) AddDealToSectorResponse

	// potentially change to selectSectorByDealExpiry
	selectStagedSectorBySize(deal mkt.StorageDeal) StagedSector

	// call by SectorIndexer itself to get pip of a deal
	// TODO: not sure this should be here
	// getPieceInclusionProof(deal mkt.StorageDeal) PieceInclusionProof

	OnNewTipset(chain Chain, epoch blockchain.Epoch) struct {}

	lookupSectorByExpiry(currentEpoch blockchain.Epoch) [sector.SectorID]

	purgeSectorWithNoLiveDeals(sectorIDs [sector.SectorID]) struct{}

	selectSectorBuilderByDeal(deal mkt.StorageDeal) SectorBuilder

}
