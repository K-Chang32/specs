
import file "github.com/filecoin-project/specs/systems/filecoin_files/file"
import base_blockchain "github.com/filecoin-project/specs/systems/filecoin_blockchain"

type Path struct{} // TODO

type SealRandomSeed Bytes

type SealCfg struct {
  SectorSize     UInt
  SubsectorCount UInt
  Partitions     UInt
}

// SealVerifyInfo is the structure of all thte information a verifier
// needs to verify a Seal.
type SealVerifyInfo struct {
  SectorID SectorID
  MinerID  base_blockchain.Address
  OnChain  OnChainSealVerifyInfo
}

// OnChainSealVerifyInfo is the structure of information that must go on chain.
type OnChainSealVerifyInfo struct {
  UnsealedCID         UnsealedSectorCID // CommD
  SealedCID           SealedSectorCID   // CommR
  RandomSeed          SealRandomSeed
  Proof               SealProof
}

// ProofAux is meta data required to generate certain proofs
// for a sector, for example PoSt.
// These should be stored and indexed somewhere by CommR.
type ProofAux struct {
  CommRLast SealedSectorCID
  CommC     Commitment

  // TODO: This may be a partially-cached tree.
  // this may be empty
  CachedMerkleTreePath file.Path
}

type SealArguments struct {
  Algorithm          SealAlgorithm
  OutputArtifacts    SealOutputArtifacts
}

type SealProofConfig struct { // TODO
}

type SealProof struct { //<curve, system> {
  config       SealProofConfig
  proofBytes   Bytes
  verification struct {

  }
}

// TODO: move into proofs lib
type FilecoinSNARKProof struct {} //<bls12-381, Groth16>

type SealAlgorithm union {
  // ZigZagPoRep
  StackedDRG
}

//  SealVerifyArtifacts struct {}
//  SealVerifyArtifacts union {
//    ZigZagSealVerifyArtifacts struct {
//      Proof ZigZagSealProof
//    }


// type SealAlgorithmArtifacts struct {
  // AlgorithmWideArtifacts struct {
  //   // trusted setup output parameters go here
  //   // updates to public parameters go here

  // }

  // SealSetupArtifacts struct {
  //   // per-sector setup artifacts go here
  // }

  // ProveArtifacts or
  // ChallengeArtifacts struct {
  //   // inputs into prove() go here
  // }

  // VerifyArtifacts struct {
  //   // inputs into verify() go here
  // }
// }


// type SealAlgorithm struct {}
  // SealAlgorithm union {
  //   SuperSectorPorep struct { // TODO Porcu names it
  //     SectorSize SuperSectorPorepSectorSize
  //     Partitions SuperSectorPorepPartitions
  //     Subsectors SuperSectorPorepSubsectorCount
  //   }
  // }

type SealOutputArtifacts struct {}
  // SealOutputArtifacts union {
  //   SuperSectorPorepOutputArtifacts struct {
  //     Proof       ZigZagSealProof
  //     ReplicaTree ReplicaTree
  //     CommRLast   ZigZagCommRLast
  //     CommC       ZigZagCommC
  //   }
  // }
