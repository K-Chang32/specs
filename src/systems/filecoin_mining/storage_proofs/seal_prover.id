type SealResponse struct {
     CommD                 Commitment
     CommR                 Commitment
     Proof                 SealProof
     PersistentAux         SectorPersistentAux
     MerkleTreePath        Path // TODO: This may be a partially-cached tree.
}

type SealPublicInputs struct {}

type SealProofConfig struct {
    partitionCount UInt
    subsectorsCount UInt
}

type SNARKProof struct { //<curve, system> {
     config SealProofConfig
     proofBytes Bytes
}

type FilecoinSNAKRProof struct {} //<bls12-381, Groth16>

type SealProof struct {
     snarkProof      SNARKProof,
     susbsectorCount Uvarint,
}

type PieceInclusionProof struct {}

type SealProver struct {
  GenerateCommP() Commitment
  GenerateCommD() Commitment

  GeneratePieceInclusionProof(
    Tree          MerkleTree, //MerkleTree<Rephash>,
    PieceStart    Uint,
    PieceLength   Uint,
  ) union { Error, PieceInclusionProofs }

  VerifyPieceInclusionProof() struct {}

  MaxUnsealedBytesPerSector(SectorSize UInt) UInt
}