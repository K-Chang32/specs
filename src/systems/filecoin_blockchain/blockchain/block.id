import filcrypto "github.com/filecoin-project/specs/libraries/filcrypto"
import stateTree "github.com/filecoin-project/specs/systems/filecoin_blockchain/state_tree"
import clock 	 "github.com/filecoin-project/specs/systems/filecoin_nodes/clock"
import base 	 "github.com/filecoin-project/specs/systems/filecoin_blockchain"

type Block struct {
	MinerAddress	             base.Address
	Tickets	  	                 [base.Ticket]
	ParentTipset  	  	         Tipset
	ParentWeight		         base.ChainWeight
	Height	                     base.ChainHeight
	StateTree	                 stateTree.StateTree
	Messages	                 [base.Message]
//	BLSAggregate 	             filcrypto.Signature
 	MessageReceipts		         [base.MessageReceipt]
	Timestamp	                 clock.Time
	BlockSig 	                 filcrypto.Signature

//	SerializeSigned()            []byte
//	ComputeUnsignedFingerprint() []

	VerifyTickets()				bool
}

type SignedBlock struct {
	block 			&Block
	sig				filcrypto.Signature
}

type Tipset struct {
	Blocks            	[Block]

    Has(block Block)  	bool			 		@(cached)
    Parents         	Tipset      		   	@(cached)
	// StateTree should live in VM
	StateTree       	stateTree.StateTree     @(cached)
    Epoch           	Epoch          			@(cached)
    Weight          	base.ChainWeight    	@(cached)

	ValidateSyntax()	bool					@(cached)
	LatestTimestamp()	clock.Time				@(cached)
}

type Chain struct {
    HeadEpoch() Epoch
    FinalizedEpoch() Epoch
    LatestCheckpoint() Epoch

    TipsetAtEpoch(epoch Epoch) Tipset
}