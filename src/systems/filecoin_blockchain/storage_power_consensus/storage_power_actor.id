import base 	 	"github.com/filecoin-project/specs/systems/filecoin_blockchain"
import filcrypto 	"github.com/filecoin-project/specs/libraries/filcrypto"

type StoragePowerActor struct {

	// call by StorageMiningSubsytem on miner creation
	RegisterMiner(ownerAddr base.Address, workerPubKey filcrypto.PubKey) struct{}

	// call by StorageMinerActor on successful seal
	// TODO: workerKey of type StorageMiner.WorkerPubKey
	IncrementPower(minerAddress base.Address) struct {}
	UpdatePower(address base.Address, newPower minerStorage) struct {}
	SuspendMiner(address base.Address) struct {}

	// UpdateStoragePowerSubsystem(Tipset, StateTree)

	// VerifyElectionProof(base.Address, base.ElectionProof)	bool
	// TotalStorage()								UVarint

	// // What does graceful removal look like?
	// NotifyConsensusFault(base.Address, [Block])
	// NotifyStorageFault(base.Address)
	// TryPublishBlock(StateTree)					Block

	// RegisterStorageMiner(SealProof)				Address
	// TryUpdateStorage(base.Address, newPower)			error

}