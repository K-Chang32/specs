import filcrypto "github.com/filecoin-project/specs/libraries/filcrypto"
import addr "github.com/filecoin-project/specs/systems/filecoin_vm/actor/address"

type BytesAmount UVarint

type StoragePowerActor struct {
    // call by StorageMiningSubsytem on miner creation
    RegisterMiner(ownerAddr addr.Address, workerPubKey filcrypto.PubKey) addr.Address

    // call by StorageMinerActor on successful seal
    // TODO: workerKey of type StorageMiner.WorkerPubKey
    IncrementPower(minerAddress addr.Address)
    UpdatePower(address addr.Address, newPower minerStorage)
    SuspendMiner(address addr.Address)

    // UpdateStoragePowerSubsystem(Tipset, StateTree)

    // VerifyElectionProof(base.Address, base.ElectionProof)	bool
    TotalStorage() BytesAmount

    // // What does graceful removal look like?
    // NotifyConsensusFault(base.Address, [Block])
    // NotifyStorageFault(base.Address)
    // TryPublishBlock(StateTree)					Block

    // RegisterStorageMiner(SealProof)				Address
    // TryUpdateStorage(base.Address, newPower)			error
}
