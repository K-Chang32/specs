import block "github.com/filecoin-project/specs/systems/filecoin_blockchain/struct/block"
import addr "github.com/filecoin-project/specs/systems/filecoin_vm/actor/address"
import filcrypto "github.com/filecoin-project/specs/algorithms/crypto"

type ExpectedConsensus struct {
    expectedMinersPerRound  UVarint
    expectedRewardPerRound  UVarint

    IsValidConsensusFault(faults ConsensusFaultType, blocks [block.Block]) bool
    IsWinningElectionProof(electionProof ElectionProof, workerAddr addr.Address) bool
    GetBlockRewards(electionProof ElectionProof, workerAddr addr.Address) UVarint
}

type Ticket struct {
    VRFResult         filcrypto.VRFResult

    Output            Bytes                @(cached)
    ValidateSyntax()  bool
    Verify(input Bytes, pk filcrypto.VRFPublicKey) bool
}

type BytesAmount UVarint
type StoragePower BytesAmount

type ElectionProof struct {
    VRFResult                                       filcrypto.VRFResult
    Output                                          Bytes @(cached)
    Verify(input Bytes, pk filcrypto.VRFPublicKey)  bool

    ValidateSyntax()                                bool
}