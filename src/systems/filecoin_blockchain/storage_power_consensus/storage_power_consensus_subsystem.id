import addr "github.com/filecoin-project/specs/systems/filecoin_vm/actor/address"
import filcrypto "github.com/filecoin-project/specs/libraries/filcrypto"
import block "github.com/filecoin-project/specs/systems/filecoin_blockchain/struct/block"
import chain "github.com/filecoin-project/specs/systems/filecoin_blockchain/struct/chain"
import st "github.com/filecoin-project/specs/systems/filecoin_vm/state_tree"
import base_mining "github.com/filecoin-project/specs/systems/filecoin_mining"

type StoragePowerConsensusSubsystem struct {//(@mutable)
    // TODO: this is incorrect, it does not belong
    powerTable           PowerTable
    actor                StoragePowerActor
    associatedStateTree  &st.StateTree  // TODO: remove this. should not store this here.

    GenerateElectionProof(tipset block.Tipset) block.ElectionProof
    ChooseTipsetToMine(tipsets [block.Tipset]) [block.Tipset]

    // call by StorageMiningSubsystem in sealing sector
    GetSealSeed(chain chain.Chain, epoch block.ChainEpoch) base_mining.SealSeed

    // call by StorageMiningSubsystem after sealing
    GetPoStChallenge(chain chain.Chain, epoch block.ChainEpoch) base_mining.PoStChallenge

    // call by BlockchainSubsystem during block reception
    ValidateBlock(block block.Block) error

    // call by StorageMiningSubsystem during block production
    GetElectionArtifacts(chain chain.Chain, epoch block.ChainEpoch) block.ElectionArtifacts

    // call by StoragePowerConsensusSubsystem itself during block production
    TicketAtEpoch(chain chain.Chain, epoch block.ChainEpoch) block.Ticket

    // call by StorageMiningSubsystem during block production
    TryLeaderElection(electionProof block.ElectionProof) bool

    computeTipsetWeight(tipset block.Tipset) block.ChainWeight
}

type PowerTable struct {
    // all power here is always verified
    minerPower {base.Address: StorageMiner}
    LookupMinerPower(addr base.Address) UVarint
    GetTotalPower() UVarint
    RemovePower(addr base.Address)
}

type StorageMiner struct {
    minerAddress  addr.Address
    minerStorage
    VRFKeyPair    filcrypto.VRFKeyPair
}

type minerStorage UVarint
