sequenceDiagram
participant StorageClient
participant StorageProvider
participant StorageMiningSubsystem
participant StorageMarketActor
StorageClient -->> StorageMarketActor: AddBalance()
StorageProvider -->> StorageMarketActor: AddBalance()
StorageClient -->+ StorageProvider: OnNewStorageDealProposal(proposal, payloadCID)
StorageProvider -->- StorageClient: NotifyOfStorageDealProposalStatus(ProposalRejected)
StorageClient -->+ StorageProvider: OnNewStorageDealProposal(proposal, payloadCID)
StorageProvider -->- StorageClient: NotifyOfStorageDealProposalStatus(ProposalAccepted)
StorageProvider -->+ StorageClient: graphsync.Pull(payloadCID)
StorageClient -->- StorageProvider: graphsync.Push(payload IPLD)
StorageProvider -->+ StorageProvider: OnReceivingPayload(payloadCID)
StorageProvider -->> StorageProvider: verifyStorageDealProposal(proposal)
StorageProvider -->> StorageProvider: verifyPieceCID(proposal, payloadCID)
StorageProvider -->> StorageProvider: signStorageDealProposal(proposal)
StorageProvider -->- StorageClient: NotifyOfStorageDealProposalStatus(ProposalSigned)
StorageProvider -->> StorageProvider: publishStorageDealMessage(message)
StorageProvider -->+ StorageMarketActor: PublishStorageDeal(message)
StorageMarketActor -->> StorageMarketActor: generateStorageDealID()
StorageMarketActor -->> StorageMarketActor: lockFund()
StorageMarketActor -->- StorageProvider: dealID
StorageProvider -->> StorageClient: NotifyOfStorageDealStatus(DealPublished)
StorageProvider -->> StorageMiningSubsystem: HandleStorageDeal(deal)
StorageMiningSubsystem -->> StorageMinerActor: CommitSector()
StorageProvider -->> StorageClient: NotifyOfStorageDealStatus(DealCommitted)
CronActor -->> StorageMinerActor: NotifyOfPoStChallenge()
StorageMiningSubsystem -->> StorageMinerActor: SubmitPoSt()
StorageMinerActor -->> StorageMinerActor: activateSector
StorageMinerActor -->> StorageProvider: NotifyOfOnChainDealStatus(DealActive)
StorageProvider -->> StorageClient: NotifyOfStorageDealStatus(DealActive)
CronActor -->> StorageMinerActor: NotifyOfPoStChallenge()/CheckSurprisePoStSubmissionHappened()
StorageMinerActor -->> StorageProvider: NotifyOfOnChainDealStatus(DealExpired/DealFailing)
StorageProvider -->> StorageClient: NotifyOfStorageDealStatus(DealExpired/DealFailing)