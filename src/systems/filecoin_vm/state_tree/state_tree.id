import addr "github.com/filecoin-project/specs/systems/filecoin_vm/actor/address"
import actor "github.com/filecoin-project/specs/systems/filecoin_vm/actor"

// Epoch is an epoch in time in the StateTree.
// It corresponds to rounds in the blockchain, but it
// is defined here as actors need a notion of time.
type Epoch UVarint

// TODO: move this into a directory w/ all the actors + states
type ActorName enum {
    StoragePowerActor
    StorageMarketActor
    StorageMinerActor
    PaymentChannelActor
    InitActor
    AccountActor
    CronActor
}

type StateTree struct {
    SystemActors              {ActorName: addr.Address}
    ActorStates               {addr.Address: actor.ActorState}

    // TODO: API ConvenienceAPI

    // TODO: rename to GetActorState and change return type?
    GetActor(a addr.Address)  actor.Actor

    // Balance returns the balance of a given actor
    Balance(a addr.Address)   actor.TokenAmount

    WithActorState(a addr.Address, state actor.ActorSubstateCID) StateTree
    WithFundsTransfer(from addr.Address, to addr.Address, amount actor.TokenAmount) union {StateTree, error}
    WithNewActor(a addr.Address) union {StateTree, error}
    WithNewActorIfMissing(a addr.Address) union {StateTree, error}
}
